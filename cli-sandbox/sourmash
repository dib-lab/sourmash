#!/usr/bin/env python
from argparse import ArgumentParser
import cli
import sys

VERSION = '2.2.0'


class CustomParser(ArgumentParser):
    def __init__(self, citation=True, **kwargs):
        super(CustomParser, self).__init__(**kwargs)
        self.citation = citation
        self._citation_printed = False

    def print_citation(self):
        if self._citation_printed:
            return
        print('Cite me plz')
        self._citation_printed = True

    def parse_args(self, args=None, namespace=None):
        if (args is None and len(sys.argv) == 1) or (args is not None and len(args) == 0):
            self.print_help()
            raise SystemExit(0)
        args = super(CustomParser, self).parse_args(args=args, namespace=namespace)
        if ('quiet' not in args or not args.quiet) and self.citation:
            self.print_citation()
        return args


commands = ['compute', 'compare', 'search', 'plot', 'gather', 'lca', 'sbt', 'info', 'signature']
commandstr = ' -- '.join(sorted(commands))

desc = 'Compute, compare, manipulate, and analyze MinHash sketches of DNA sequences.'
p = CustomParser(prog='sourmash', description=desc)
p._optionals.title = 'Options'
p.add_argument('-v', '--version', action='version', version='sourmash '+ VERSION)
p.add_argument('-q', '--quiet', action='store_true', help='don\'t print citation information')
s = p.add_subparsers(
    title='Commands', dest='cmd', metavar='cmd', help=commandstr,
    description='Invoke "sourmash <cmd> --help" for more details on executing each command.'
)
for cmd in commands:
    getattr(cli, cmd).subparser(s)
p._action_groups.reverse()
args = p.parse_args()

print(args)
